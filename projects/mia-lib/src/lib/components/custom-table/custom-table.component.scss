@import "layout/breakpoints";

.custom-table {
  display: flex;
  flex-direction: column;
  border: 1px solid var(--base-03);

  mat-table {
    overflow: auto;

    // Header

    mat-header {
      &-cell.mat-column {
        &-expand,
        &-select {
          flex: 2;
        }
      }
    }

    [aria-sort="ascending"],
    [aria-sort="descending"] {
      font-weight: bold;
      color: var(--text-01);
    }

    // Cell

    mat-cell {
    }

    // Text that is longer than the column width is truncated with an ellipsis

    :where(mat-header-cell, mat-cell) .truncate-cell {
      text-overflow: ellipsis;

      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;

      line-height: 1.5;
      overflow: hidden;
    }

    // Row

    mat-row {
      mat-cell.mat-column {
        &-expand,
        &-select {
          flex: 2;
        }

        &-actions {
          visibility: hidden;
        }
      }

      &:hover {
        background-color: var(--base-02);

        mat-cell.mat-column-actions {
          visibility: visible;
          color: var(--base-05);

          &.mat-table-sticky {
            background: initial;
          }
        }
      }

      &:last-child {
        border-bottom: none;
      }
    }
  }
}

.custom-pagination {
  border: 1px solid var(--base-03);
  border-top: none;
}

@include screen("small") {
  .custom-table {
    overflow-x: scroll;
    overflow-y: auto;

    mat-table {
      min-width: 1024px;
      overflow: initial;

      mat-cell.mat-column-actions.mat-table-sticky {
        justify-content: flex-end;
        background: var(--base-01) !important;
      }
    }
  }
}
